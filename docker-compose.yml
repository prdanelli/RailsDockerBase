version: "2.4"

x-app: &app
  build:
    context: .
    dockerfile: Dockerfile
  tmpfs:
    - /tmp
  stdin_open: true
  tty: true
  volumes:
    - .:/usr/src/app
  environment: &app_env
    ACTION_CABLE_ADAPTER: any_cable
    REDIS_URL: redis://redis:6379/0
    REDIS_SIDEKIQ_URL: redis://redis:6379/1
    CABLE_URL: ws://localhost:8080/cable
    ANYCABLE_REDIS_URL: redis://redis:6379/2
    ANYCABLE_RPC_HOST: anycable:50051
    ANYCABLE_HOST: "0.0.0.0"
    ANYCABLE_DEBUG: 1

services:
  rails:
    <<: *app
    command: bash -c "rm -f tmp/pids/server.pid && bundle exec rails s -p 3000 -b '0.0.0.0'"
    ports:
      - 3000:3000
    volumes:
      - .:/usr/src/app
    depends_on:
      sidekiq:
        condition: service_started
      websocket:
        condition: service_started
      database:
        condition: service_healthy
      redis:
        condition: service_healthy

  database:
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
      POSTGRES_DB: app_development
    volumes:
      - ./.volumes/postgres/data:/var/lib/postgres/data
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5

  sidekiq:
    <<: *app
    command: bundle exec sidekiq -C config/sidekiq.yml
    depends_on:
      database:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      REDIS_URL: redis://redis:6379/1

  redis:
    image: redis:6.2.6
    ports:
      - 6379:6379
    volumes:
      - ./.volumes/redis:/data
    command: ["--appendonly yes"]
    healthcheck:
      test: redis-cli ping
      interval: 10s
      timeout: 5s
      retries: 30

  websocket:
    image: anycable/anycable-go:latest
    ports:
      - 8080:8080
    environment:
      <<: *app_env
    depends_on:
      redis:
        condition: service_healthy

  anycable:
    <<: *app
    command: bundle exec anycable
    ports:
      - "50051"
    depends_on:
      websocket:
        condition: service_started
      redis:
        condition: service_healthy

  elasticsearch:
    image: elasticsearch:7.16.1
    ports:
      - "9200:9200"
    volumes:
      - ./.volumes/elasticsearch/:/usr/share/elasticsearch/data
    environment:
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - "discovery.type=single-node"

  kibana:
    image: kibana:7.16.1
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    environment:
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - "discovery.type=single-node"
